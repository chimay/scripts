# vim: set filetype=conf :

# archiveBoitesMail {{{1

# {{{ Archive jusqu'à la fin du mois précédent

#finsDeMois=(31 28 31 30 31 30 31 31 30 31 30 31)

#annee=`date +%Y`
#mois=`date +%m`

#(( mois -= 1 ))

#if (( mois == 0 ))
#then
	#mois=12
#fi

#jour=${finsDeMois[${mois}]}

#delai=${annee}-${mois}-${jour}

# }}}

# }}}1

# cd ~/racine/site/eclats2vers/orgmode
#
# echo
# echo "cd ~/racine/site/eclats2vers/orgmode"
# echo
#
# git gc
#
# echo
# echo "du -sh .git"
# echo
#
# du -sh .git

echo
echo 'rm -rf ~/racine/mail/Maildir/cur'
echo 'rm -rf ~/racine/mail/Maildir/new'
echo 'rm -rf ~/racine/mail/Maildir/tmp'
echo

rm -rf ~/racine/mail/Maildir/cur
rm -rf ~/racine/mail/Maildir/new
rm -rf ~/racine/mail/Maildir/tmp

# Demain

(( jour_mois += 1 ))
(( jour_semaine += 1 ))

(( jour_semaine == 8 )) && jour_semaine=1

	dossiers+=(~/racine/site/*(/))

# {{{ Nouvelles (plus ou moins boites MH) dans ~/racine/news/spool/news

cd ~/racine/news/spool/news

groupes=()

for repertoire in **/*(/)
do
	# Le répertoire doit contenir des fichiers
	# pour être considéré comme une boîte aux lettres

	fichiers=(${repertoire}/*(.))

	Nfichiers=${#fichiers}

	if (( Nfichiers == 0 ))
	then
		continue
	fi

	#echo $Nfichiers $repertoire

	groupes+=($repertoire)
done

#boites+=("=Nouvelles/"$^groupes)

# }}}

# {{{ Boites distantes

#boites+=pop://pop.truc.muche
#boites+=imaps://user@imap.gmail.com/INBOX

# }}}

archive-mail.zsh --no-compress $delai Ajournes
archive-mail.zsh --no-compress $delai Corbeille
archive-mail.zsh --no-compress $delai Doublons
archive-mail.zsh --no-compress $delai Envoyes
archive-mail.zsh --no-compress $delai Lus
archive-mail.zsh --no-compress $delai Pourriel
archive-mail.zsh --no-compress $delai Reception
archive-mail.zsh --no-compress $delai mbox

# {{{ Affichage

echo
echo "------------------------------------"
echo
echo "Boite : " $boite
echo "Date / Ancienneté : " $delai
echo "Fanions : " $fanions
echo

# }}}

cd ~/racine/mail/Systeme

liste=(Reception)

boucle $liste

exit 0

Lilypond Lmms Oulipo

xmodmap ~/.Xmodmap >>! ~/log/xmodmap.log 2>&1 &

fichierListe=${fichierGen/%gen/m3u}

mots=()

dispersion=${${nombres[1]}:-12.0}
minutes=${${nombres[2]}:-120}

fichierGen=${${mots[1]}:-~/graphix/list/wallpaper.gen}

	hsetroot -full $fond

	#hsetroot -fill $fond
	#hsetroot -center $fond
	#hsetroot -tile $fond

	feh --bg-max $fond

	feh --bg-max --no-fehbg $fond

#[ $HOST = shari ] && xfce4-panel &

mpv-socket.bash add $HOME/audio/sonnerie/notification/accueil.ogg
mpv-socket.bash volume 100

if [ $HOST = shari ] || [ $HOST = tixu ] || [ $HOST = mandala ]
then
fi

#psgrep kitti3 || kitti3 -n kitti3-dropdown -p top -s 0.8 0.6 &

racine=$(echo $sortie | grep '^Repertoire racine :  ')

#source ~/racine/config/cmdline/zsh/fonction.zsh
# Passe en mode intéractif malgré lé -y
#psi -y 10 wallpaper.zsh

psgrep xbindkeys || xbindkeys

kill -15 $(ps --no-headers -eo '%p %a' | grep -v grep | grep wallpaper.zsh | awk '{ print $1 }') &

#echoerr 'Sortie :'
#echoerr

#{ echo $sortie | sed 's/^/\t/' } 1>&2

xcape -e 'Shift_L=Shift_L|asterisk;Control_L=Shift_L|period;Super_L=ISO_Level3_Shift|at;Alt_L=ISO_Level3_Shift|ampersand;ISO_Level3_Shift=ISO_Level3_Shift|backslash;Super_R=ISO_Level3_Shift|numbersign;Hyper_R=ISO_Level3_Shift|equal;Control_R=Shift_R|slash;Shift_R=Shift_L|question'

# Nettoyage {{{1

#rm -f $racine/**/*.exiv2_temp

# }}}1

racine=$(cat $meta | grep 'root' | cut -d ' ' -f 2)

(( $#racine == 0 )) && racine=~/graphix

racine=$~racine
racine=${racine##*:}
racine=${racine// }

	desktop_windows=($(bspc query -N -n .window -d focused))
	print -l $desktop_windows
	echo
	if [ $#desktop_windows -eq 2 ]
	then
		echo "Swapping"
		echo
		bspwm-swap.sh
	fi
free | grep Mem | awk '{print $3/$2 * 100.0}'
free | awk '/buffers\/cache/{print $4/($3+$4) * 100.0;}'

# prend beaucoup de cpu
#imwheel &
#pkill imwheel &

chaine=''
chaine+='Shift_L=ISO_Level3_Shift|numbersign;'
chaine+='Control_L=Shift_L|asterisk;'
chaine+='Super_L=Shift_L|period;'
chaine+='Alt_L=ISO_Level3_Shift|ampersand;'
chaine+='ISO_Level3_Shift=ISO_Level3_Shift|backslash;'
chaine+='Super_R=ISO_Level3_Shift|at;'
chaine+='Hyper_R=ISO_Level3_Shift|equal;'
chaine+='Control_R=Shift_R|slash;'
chaine+='Shift_R=Shift_L|question'

xcape -e $chaine

chaine=''
chaine+='Shift_L=Shift_L|underscore;'
chaine+='Control_L=ISO_Level3_Shift|numbersign;'
chaine+='Super_L=ISO_Level3_Shift|at;'
chaine+='Alt_L=ISO_Level3_Shift|bar;'
chaine+='ISO_Level3_Shift=ISO_Level3_Shift|backslash;'
chaine+='Super_R=ISO_Level3_Shift|at;'
chaine+='Hyper_R=ISO_Level3_Shift|asciitilde;'
chaine+='Control_R=Shift_R|slash;'
chaine+='Shift_R=Shift_L|question'

chaine=''
chaine+='Shift_L=ISO_Level3_Shift|numbersign;'
chaine+='Control_L=Shift_L|underscore;'
chaine+='Super_L=ISO_Level3_Shift|at;'
chaine+='Alt_L=ISO_Level3_Shift|bar;'
chaine+='ISO_Level3_Shift=ISO_Level3_Shift|backslash;'
chaine+='Super_R=Shift_L|degree;'
chaine+='Hyper_R=ISO_Level3_Shift|asciitilde;'
chaine+='Control_R=Shift_R|slash;'
chaine+='Shift_R=Shift_L|question'

# mpv has removed --input-file option

[ -p ~/racine/run/pipe/mpv ] || {
	rm -f ~/racine/run/pipe/mpv
	mkfifo ~/racine/run/pipe/mpv
}

psgrep 'mpv --idle --input-file' || \
	mpv \
	--idle \
	--input-file=$HOME/racine/run/pipe/mpv \
	>>! ~/log/mpv-pipe.log 2>&1 &!

	exec archivemail $=fanions --include-flagged $=delai -s '-%Y' -o $archdir $boite
# {{{ Pause

(( pause > 0 )) && {

	echo "    L’horloge est en pause"
	echo
	echo "    On dort 15 minutes"
	echo

	sleep 900

	secondes=`date +%S`

	retard=$(( 60 - secondes ))

	echo '   On a' $secondes 'secondes de retard, on dort' $retard 'secondes'
	echo

	sleep $retard

	continue
}

# }}}

# {{{ Finance

	(( finance == 1 )) && \
		(( jour_semaine >= 1 )) && \
		(( jour_semaine <= 5 )) && {

		(( heure == 8 && minute == 53 )) && fifi=1

		(( heure == 17 && minute == 23 )) && fifi=1

		(( heure == 15 && minute == 30 )) && fifi=1

		(( heure == 22 && minute == 0 )) && fifi=1

		# ------------------------------

		(( heure == 10 && minute == 0 )) && fifi=1

		(( heure == 12 && minute == 0 )) && fifi=1

		(( heure == 14 && minute == 0 )) && fifi=1

		(( heure == 15 && minute == 0 )) && fifi=1

		(( heure == 16 && minute == 0 )) && fifi=1
	}

# }}}

# {{{ Ecole

	(( ecole == 1 )) && \
		(( jour_semaine >= 1 )) && \
		(( jour_semaine <= 5 )) && {

		(( jour_semaine != 3 )) && (( heure == 15 && minute == 21 )) && craie=1

		(( jour_semaine == 3 )) && (( heure == 11 && minute == 31 )) && craie=1
	}

# }}}

#  {{{ Sonnerie finance

	(( fifi == 1 )) && {

		#dingdong=1

		echo "   lecteur $volume $bol"
		echo "   lecteur $volume $bol"
		echo

		lecteur $volume $bol
		lecteur $volume $bol
	}

#  }}}

#  {{{ Sonnerie ecole

	(( craie == 1 )) && {

		echo "   lecteur $volume $chercher"
		echo

		lecteur $volume $chercher
	}

#  }}}

integer finance=0
integer ecole=0

		-f)
			shift
			finance=1
			;;
		-F)
			shift
			finance=0
			;;
		-e)
			shift
			ecole=1
			;;
		-E)
			shift
			ecole=0
			;;
	echo "   Finance = $finance"
	echo "   Ecole = $ecole"
	echo

echo "   Finance = $finance"
echo "   Ecole = $ecole"
echo

	finance = $finance

	ecole = $ecole

chercher=$HOME/audio/sonnerie/notification/ecole.ogg

	fifi=0
	craie=0

	# echo hour : $hour
	# echo
	# echo Minutes : $minute
	# echo
	# echo day of the week : $day_of_week
	# echo

bowl=$HOME/audio/sonnerie/horloge/bol-tibetain.ogg
yinyang=$HOME/audio/sonnerie/horloge/yinyang.ogg

